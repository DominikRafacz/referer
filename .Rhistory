library(referer)
usethis::use_roxygen_md()
devtools::document()
library(referer)
library(referer)
library(referer)
ref(x)
do_sth <- function(x) mod(x, x <- x + 1)
c <- 12
do_sth(c)
do_sth(ref(c))
library(referer)
do_sth(ref(c))
do_sth(ref(c))
do_sth(ref(c))
do_sth(ref(c))
do_sth(ref(c))
do_sth(c)
do_sth(c)
do_sth(c)
do_sth(c)
usethis::use_vignette("referer")
library(referer)
library(referer)
?eval
library(referer)
x <- c(1, 2, 3)
do_sth <- function(some_object) {
#let's do something with some object!
mod(some_object, some_object[1] <- 100)
mod(some_object, some_object[2] <- some_object[1] * some_object[3])
mod(some_object, some_object[3] <- log(some_object[3]))
#and then return it!
mod(some_object)
}
do_sth(x)
x
debug(do_sth)
do_sth(x)
some_object
some_object
some_object
some_object
do_sth(x)
eval(fun, env)
fun
identity
library(referer)
do_sth(x)
do_sth(x)
do_sth(x)
do_sth(x)
do_sth(ref(x))
x
do_sth(ref(x))
x
do_sth(ref(x))
x
library(referer)
x <- c(1, 2, 3)
do_sth <- function(some_object) {
#let's do something with some object!
mod(some_object, some_object[1] <- 100)
mod(some_object, some_object[2] <- some_object[1] * some_object[3])
mod(some_object, some_object[3] <- log(some_object[3]))
#and then return it!
mod(some_object)
}
do_sth(x)
x
debug(do_sth)
do_sth(ref(x))
some_object
mod(some_object)
debug(mod)
expr
object
fun
expr
library(referer)
do_sth(ref(x))
library(referer)
library(referer)
x <- c(1, 2, 3)
do_sth <- function(some_object) {
#let's do something with some object!
mod(some_object, some_object[1] <- 100)
mod(some_object, some_object[2] <- some_object[1] * some_object[3])
mod(some_object, some_object[3] <- log(some_object[3]))
#and then return it!
mod(some_object)
}
do_sth(x)
x
do_sth(ref(x))
debug(do_sth)
do_sth(ref(x))
expr
argname
missing
library(referer)
library(referer)
x <- c(1, 2, 3)
do_sth <- function(some_object) {
#let's do something with some object!
mod(some_object, some_object[1] <- 100)
mod(some_object, some_object[2] <- some_object[1] * some_object[3])
mod(some_object, some_object[3] <- log(some_object[3]))
#and then return it!
mod(some_object)
}
do_sth(x)
x
do_sth(ref(x))
x
x
library(referer)
library(referer)
library(referer)
library(referer)
x <- c(1, 2, 3)
do_sth <- function(some_object) {
#let's do something with some object!
mod(some_object, some_object[1] <- 100)
mod(some_object, some_object[2] <- some_object[1] * some_object[3])
mod(some_object, some_object[3] <- log(some_object[3]))
#and then return it!
mod(some_object)
}
do_sth(x)
x
do_sth(ref(x))
x
x
x <- 123
ref(x)
library(referer)
ref(x)
tmp <- ref(x)
tmp
mod(tmp, tmp + 2)
mod(tmp, tmp <- tmp + 2)
??.
??`.`
fun <- function(xyz) {
12
12
12
}
debug(fun)
fun()
environment()
environmentIsLocked()
environmentIsLocked(environment())
?environment
ls(environment())
ls(parent.frame())
ls.str(parent.frame())
functionBody()
mode(functionBody())
typeof(functionBody())
class(functionBody())
as.list(functionBody())
2,3
2;3
lengthd
lengths
base::lengths
base::length
base::lengths
.Internal
?InternalMethods
